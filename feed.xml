<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator><link href="https://cem-yilmaz.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://cem-yilmaz.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2024-12-27T14:02:19+00:00</updated><id>https://cem-yilmaz.github.io/feed.xml</id><title type="html">blank</title><subtitle>Cem Yilmaz - Personal site. </subtitle><entry><title type="html">Dockerising everything</title><link href="https://cem-yilmaz.github.io/blog/2024/dockerise-all-the-things/" rel="alternate" type="text/html" title="Dockerising everything"/><published>2024-11-04T00:00:00+00:00</published><updated>2024-11-04T00:00:00+00:00</updated><id>https://cem-yilmaz.github.io/blog/2024/dockerise-all-the-things</id><content type="html" xml:base="https://cem-yilmaz.github.io/blog/2024/dockerise-all-the-things/"><![CDATA[<p>In the summer of 2024, I made a change.</p> <p>I’d naively brought my gaming PC to uni so I could continue my teenage hobby in my downtime. But SURPRISE! I instead spent my free time engaging with new friends and societies, working, and discovering more about my degree. All my computational needs were more than covered by my laptop, and the desktops the university supplied. It wasn’t uncommon for my keyboard to sit collecting dust.</p> <p>The problem was, even if I wanted to play today’s games, my PC was (by today’s standards) “pretty low end” (<a href="https://youtu.be/OjawnIC81nE?t=144">Battaglia, 2024</a>). However, years of bloated program installs meant it wasn’t a fun experience to try and do programming for uni on it either.</p> <p>So mid-summer, I wiped the drive, and installed Debian.</p> <p>I’d been looking at Linux distros for a while, and the one that really grabbed my attention was <a href="https://nixos.org/">NixOS</a>, mainly for the feature that you could get an identical setup on two different computers, all managed by a single file. It did seem like it came with some caveats<sup id="fnref:caveats" role="doc-noteref"><a href="#fn:caveats" class="footnote" rel="footnote">1</a></sup> so I decided on good old fashioned Debian to match my Ubuntu’d laptop. The question then became, what was the best way to have the same development environments when using two different machines?</p> <h1 id="what-is-docker">What is Docker?</h1> <p><em>The following is not a comprehensive (or even fully correct) explanation of Docker. It’s both a primer for how I use it, and the explanation I wish I had found when trying to work out what it was</em>.</p> <p>A <strong>virtual machine</strong> is a program that simulates all the physical parts of a computer in code, to the extent that you can load an <strong>operating system</strong> into it and run it <em>inside</em> of the program. In theory, this is a great idea for developer environments - load up a VM, install what you need inside there, and then reopen it every single time you want to code using the tools! You could even have multiple VMs for different coding environments!</p> <p>The downside to this is VMs are designed to load <em>the entire operating system</em>, which means you’ll be simulating all the memory management, background tasks, fancy desktop effects, file management, etc even if all you want to do is make a simple calculator in Rust.</p> <p>A <strong>container</strong> is effectively a very lightweight <strong>VM</strong>. It’s usually designed with one purpose in mind - imagine a VM, but with every unnecessary bit hacked off. <strong>Docker</strong> is just a program that acts akin to a <strong>virtual machine <em>manager</em></strong>, but for these containers. It is needed for these containers to run on your computer.</p> <p>That’s not all Docker does - I haven’t even touched on <strong>images</strong>, which are basically templates for a container and allow Docker to run more efficiently - but this was enough for me to realise that by installing Docker, I had my solution.</p> <h1 id="how-did-i-use-docker">How did I use Docker?</h1> <p>Confession: I used <a href="https://containers.dev/">devcontainers</a>.</p> <p>Devcontainers (once again, to me) are basically a wrapper for containers, but their main advantage was the fact they integrated incredibly well with VSCode. Docker can sometimes be a bit tricky to get the stuff you want inside of a container, but here the process was as simple as clicking <code class="language-plaintext highlighter-rouge">Reopen in Container</code> and waiting for my environment to be built.</p> <p>I would simply create a base <code class="language-plaintext highlighter-rouge">devcontainer.json</code> file inside of each of my repositories, and slowly build up my desired environment through changes to that file (corresponding to commands and options). This meant, as long as I had VSCode and Docker installed on a machine, I could have the exact same experience. This also let me leverage <a href="https://github.com/features/codespaces">GitHub Codespaces</a>, which already use devcontainers to set everything up. If I really wanted to, I could even open the codespace in a web browser.</p> <h1 id="what-were-the-results">What were the results?</h1> <p>Initially, everything was coming up Milhouse. I made devcontainers for each of my courses, aswell as a \(\LaTeX\) writing one, and a few more.</p> <p>The problems began once I tried to replicate these on my PC.</p> <p>Firstly, you may have noticed that if I’m ultimately still using a <strong>VM</strong> (via a <strong>container</strong>), then all my files are on that VM, right? Docker provides a system called a <a href="https://docs.docker.com/engine/storage/bind-mounts/">bind mount</a>, which takes your current repository, and <em>mounts it as the filesystem</em> to the container. This means, if your container writes something to this filesystem, it actually appears on your real filesystem! This keeps containers small, and means you only need to commit the files you want to change.</p> <p>That being said, my containers failed to build on my PC, and after a few hours of bug hunting, I found the problem: Docker only (initially) allows you to mount folders <em>from your <code class="language-plaintext highlighter-rouge">\home</code> directory</em>. I was hosting all my desired repositories on a separate drive. The only solution I was able to find was to add these volumes in <strong>Docker Desktop</strong>.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="https://docs.docker.com/desktop/images/synched-file-shares.webp" sizes="95vw"/> <img src="https://docs.docker.com/desktop/images/synched-file-shares.webp" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> The mounts at the bottom default to just `\home`. I've also spent too long failing to find any solution to do this via config files - I genuinely cannot find a way to add more file locations without Docker Desktop. </div> <p>This irked me, as Docker Desktop is effectively completely uneccessary on Linux, and while this fixed my issue, it caused even more relating to specific system-wide docker configurations I had made to get my idea working.</p> <p>Mainly, this related to trying to pass-through my GPU to containers in anticipation of heavy machine learning tasks. This requires installing a specific NVIDIA “container runtime”, and plain-and-simple <strong>does not work if Docker Desktop is installed</strong>. So given the choice between not having GPU’s passed through to containers and <em>not having them work at all</em>, I chose the former.</p> <p>Then there was the issue that sometimes containers just failed to build on certain systems. I could not get my <em>Agda</em> container to build on my laptop, despite working perfectly fine in codespaces and even on my problematic main PC. The only solution to allowing my \(\LaTeX\) container to access git repositories in it’s fileshare was the hilariously insecure <code class="language-plaintext highlighter-rouge">chown root:root .</code></p> <p>Finally, containers are a jack of all trades, but <strong>I just didn’t find myself needing them</strong>. It would’ve been nice to open up a container hyper-optimised for every task, but most of my courses just required a Python virtual environment, and those which didn’t were better suited to not using VSCode at all. As for that \(\LaTeX\) container, I found it just easier to use <em>Overleaf</em>.</p> <h2 id="epilogue">Epilogue</h2> <p>I’m glad I finally learned Docker this summer. I can see how the tool is incredibly useful, and understand why many home server setups adore running isolated containers. For me, it was like taking a chainsaw to a toastie: it’ll do the job, but you might crack your plate and you’ll probably get ham and cheese all over the walls.</p> <hr/> <div class="footnotes" role="doc-endnotes"> <ol> <li id="fn:caveats" role="doc-endnote"> <p>The ones I recall were: NixOS stores programs in unusual paths which causes issues with some dependencies, I wasn’t sure how long boot times would be considering the OS would “rebuild” itself often, I was worried I’d version stuff incorrectly, I’m still unsure what <em>flakes</em> actually are, and I may spend too much time editing the config instead of actually doing work. <a href="#fnref:caveats" class="reversefootnote" role="doc-backlink">&#8617;</a></p> </li> </ol> </div>]]></content><author><name></name></author><category term="uni"/><category term="personal"/><summary type="html"><![CDATA[An ode to my summer with docker and why I ultimately moved on]]></summary></entry><entry><title type="html">How I use Obsidian to study</title><link href="https://cem-yilmaz.github.io/blog/2024/how-i-use-obsidian/" rel="alternate" type="text/html" title="How I use Obsidian to study"/><published>2024-11-03T00:00:00+00:00</published><updated>2024-11-03T00:00:00+00:00</updated><id>https://cem-yilmaz.github.io/blog/2024/how-i-use-obsidian</id><content type="html" xml:base="https://cem-yilmaz.github.io/blog/2024/how-i-use-obsidian/"><![CDATA[<p>August 12th, 2023. This was the day I stumbled upon <a href="https://www.youtube.com/watch?v=DbsAQSIKQXk">this video</a> by <em>No Boilerplate</em> about a program called <strong><a href="https://obsidian.md/">Obsidian</a></strong> that I’d never heard of before.</p> <p>Obsidian is a free Markdown editor with an emphasis on linking notes together to form connections. It’s garnered quite a lot of popularity in the past year or so especially amongst tech-savvy users, which I attribute to it’s “almost open-source” nature.</p> <p>Obsidian <em>isn’t</em> open-source. It’s free for personal use (companies must pay for the commercial license, although I’m unsure if this is only enforced to the same standard that <em>WinRAR</em> would do so), but offers such a <a href="https://docs.obsidian.md/Home">rich plugin system</a> that you could probably add any feature that you want to.</p> <p>I’m not about to tutorialise Obsidian here as there are plenty of video tutorials on YouTube that do a much better job than I could ever hope to achieve. This post is intended to describe <em>how I currently use Obsidian to take notes in university</em>, so hopefully people - potentially students - willing to take the plunge with Obisidian can take the advice I wish I’d known when I started.</p> <p>Of course, following a retrospective<sup id="fnref:skip" role="doc-noteref"><a href="#fn:skip" class="footnote" rel="footnote">1</a></sup> look into how I’ve taken notes during my time here at uni.</p> <h1 id="a-brief-history-of-note-taking">A brief history of note-taking</h1> <h2 id="first-year">First Year</h2> <p>I started university with a spring in my step and a notebook in my pocket. No, seriously<sup id="fnref:rb" role="doc-noteref"><a href="#fn:rb" class="footnote" rel="footnote">2</a></sup>.</p> <p>Look, I’d taken a year out due to Covid in September 2020, and aside from working an unmotivating job, I’d only been keeping mentally stimulated by completing the Codeacademy full-stack web developer course that I said I didn’t have the time for earlier. <strong>Translation</strong>: I hadn’t needed to take notes on a educational course in ages.</p> <p>I bought a laptop for university but still, during my first few weeks, handwrote every single note for every single lecture. In the same notebook. With no external labels or organisational system at all. Writing all this down and looking at it now, it’s a miracle I academically did well this semester at all.</p> <h2 id="onenote">OneNote</h2> <p>While I can’t remember exactly how I found OneNote, it was probably through a mix of two factors:</p> <ul> <li>My university uses Microsoft’s Office suite of products and OneNote has been used to share files in the past, particularly in my first and second years</li> <li>I kept seeing students whip out iPads and get all the benefits of handwritten notes, while being able to seamlessly combine the official course materials</li> </ul> <p>I simply made one notebook, and different tabs (or whatever they call them) for each course. I’d make a note for each lecture, paste the slides in, and annotate them - just like the iPad students!</p> <p>I then found it rather difficult to keep up with the lectures in mathematical-notation-heavy lectures, and so got a drawing tablet, which OneNote provided excellent support for. Finally, I could not only handwrite whatever I wanted, but duplicate it, move it around, and erase on the fly!</p> <p>The honeymoon didn’t last long. When revising, it took me ages to find the relevant topics. Additionally, inserting extra images in was a faff. Most of the problem, however, originated from me: many of my notes consisted solely of the lecture slides with little more than a few extra sentences sprinkled in. I was hardly engaging with my lectures; honestly, in the case of simple “<code class="language-plaintext highlighter-rouge">Insert PDF</code>” jobs, I wouldn’t say I engaged with them at all. Something needed to change</p> <h2 id="disclaimer">Disclaimer</h2> <p>It must be said that I am <strong>not</strong> criticising all the methods mentioned in this post. I know several people who still religiously use OneNote throughout their undergrad. I’ve seen final years using Microsoft Word for their lecture notes. <strong>The best note-taking system is ultimately the one which works for you, and I’m not about to convince you otherwise</strong>.</p> <h2 id="briefly-notion">Briefly, Notion</h2> <p>I tried Notion for a bit. During the following summer, I experimented with changing my note-taking workflow in anticipation for the uni year ahead.</p> <p>I’m not about to sit here and pretend Notion is bad, because that would be a lie. It’s a key tool for countless people who effectively use it for tasks beyond the complexity of mine.</p> <p>I just didn’t like it.</p> <p>I think Notion subscribes too strongly to a “style-over-substance” mantra. You’ve got built in support for UnSplash banner photos on notes, but you can’t cleanly export the notes as Markdown. You can add emoji icons to notes, but you must choose from one of 8 pre-defined hex codes if you want a block colour banner. You’ve also got constant pop-ups for features as you type, sluggish performance, and for all the praise it’s databases get, you can’t simply insert a link to a note as the value to a cell!<sup id="fnref:workaround" role="doc-noteref"><a href="#fn:workaround" class="footnote" rel="footnote">3</a></sup></p> <h1 id="obsidian">Obsidian</h1> <p>It was at this point I found Obsidian, and everything just worked. I had an app that kept my notes in plain text, local on my computer. I had an app with no thrills, tiling panes, extensions that let me add functionality from an <a href="https://github.com/johansatge/obsidian-automatic-table-of-contents">automated table of contents</a> to a full <a href="https://github.com/PKM-er/Obsidian-Surfing">web browser</a> within the app, or a complete re-write of the <a href="https://github.com/RyotaUshio/obsidian-pdf-plus">PDF annotation</a> system.<sup id="fnref:graph" role="doc-noteref"><a href="#fn:graph" class="footnote" rel="footnote">4</a></sup></p> <h2 id="what-i-wouldnt-reccomend-doing">What I wouldn’t reccomend doing</h2> <h3 id="bloat">Bloat</h3> <p>It’s very easy to get into an Obsidian rabbit hole in YouTube finding out what it <em>can</em> do. Due to the plugin system, Obsidian can be set up for tabletop RPGs, work, personal journaling, <a href="https://zettelkasten.de/overview/">Zettelkasten-ing</a>, and much more.</p> <p><strong>It’s entirely possible to install all the tools for this all at once. Don’t do this</strong>. I originally had Obsidian setup for personal journaling, a calendar/reminder/todo system, habit tracking, university, and gym routine all at one.</p> <p>Remember - Obsidian is a <em>markdown editor</em>. You are, ultimately, <em>just editing markdown files</em>. There’s a common mantra in the Obsidian community to turn it into a “second brain” due to the fact you can enable all of this. That will genuinely work for some people; for me, in <a href="https://www.youtube.com/watch?v=XRpHIa-2XCE">the words of By Default</a>,</p> <blockquote> <p>I just need to turn my text files, into slightly more organised text files.</p> </blockquote> <p>I’ll just say Obsidian was a much more productive app for me once I ditched the calendar etc, and used it solely to explore topics for uni.</p> <h3 id="optional-ignoring-linking">(Optional) Ignoring linking</h3> <p>This one’s optional because I got by pretty well for quite some time under-utilising linking. I used to simply open a note for each lecture, and write down the stuff for that lecture. When I tried to link to topics in other lectures, I’d do so by referring to the heading/block of text it was located in.</p> <h2 id="what-i-would-reccomend-doing">What I <em>would</em> reccomend doing</h2> <p>For each course, make a folder. You can optionally add subfolders for each week, but it’s not necessary.</p> <p>For each lecture, reading etc, open up a new note. This note is going to serve as a launchpad for your ideas. Type your high level ideas here. Whenever a new topic<sup id="fnref:topic" role="doc-noteref"><a href="#fn:topic" class="footnote" rel="footnote">5</a></sup> is brought up, e.g. <em>Gradient Descent</em>, you would type (in your note)</p> <blockquote> <p><code class="language-plaintext highlighter-rouge">![[Gradient Descent]]</code></p> </blockquote> <p>The double square brackets make it so Obsidian recognises this as a note link, and the <code class="language-plaintext highlighter-rouge">!</code> means it will be <em>embedded</em> in the note.</p> <p>Click into that note to create it, and start writing. You can embed a note in this note, or if a new topic arises jump back to the old one.</p> <p>Whatever you do, <strong>keep the title of the note atomic</strong> - don’t call it something like <code class="language-plaintext highlighter-rouge">Lecture 5 - Gradient Descent</code>. This is so you can link to it in other notes: for example, in a note titled <code class="language-plaintext highlighter-rouge">Neural Networks</code>, I could say</p> <blockquote> <p>We then perform <code class="language-plaintext highlighter-rouge">[[Gradient Descent]]</code> on the weights</p> </blockquote> <p>and when I’m looking back on that note, I can just hover over the link to see it’s content.</p> <p>This process can be quite intensive, so when starting out you may want to use my previously noted no-linking method to get Obsidian’s more basic benefits. However, I highly suggest doing this when possible. A few more tips I wish I knew about:</p> <ul> <li>Obsidian has built-in \(\LaTeX\) support, which can be supercharged with the <a href="https://github.com/joeyuping/quick_latex_obsidian">Quick Latex</a> plugin, allowing for custom macros which I usually regularly</li> <li>iPad note-takers rejoice! The <a href="https://github.com/zsviczian/obsidian-excalidraw-plugin">Excalidraw</a> plugin has excellent drawing tablet support. It has many other features for creating diagrams, but I literally only use this for drawings</li> <li>The built-in <a href="https://help.obsidian.md/Plugins/Templates">templates</a> function is good enough for most people. Other more advanced templating extensions are available.</li> <li>Obsidian offer a paid syncing service. I pay for this (mainly as a way to say thanks but also because none of the other options I’m about to mention would work on my phone), but because Obsidian is just an editor for markdown files, it’s easy to use a free <a href="https://help.obsidian.md/Obsidian+Sync/Sync+limitations#Can+I+use+a+third-party+sync+with+Obsidian+Sync%3F">third party service</a> instead. I used the <a href="https://github.com/Vinzent03/obsidian-git">Obsidian Git</a> plugin for this for quite some time, and it worked quite well - the only reason I switched was because it was a right arse to set up on mobile!</li> </ul> <p>This is my current note-taking workflow with Obsidian and I highly recommend it to a specific kind of nerd.</p> <hr/> <div class="footnotes" role="doc-endnotes"> <ol> <li id="fn:skip" role="doc-endnote"> <p>The contents page is just to the left if you don’t fancy all of that. The section “<strong>What I <em>would</em> reccomend doing</strong>” contains the crux of this article. <a href="#fnref:skip" class="reversefootnote" role="doc-backlink">&#8617;</a></p> </li> <li id="fn:rb" role="doc-endnote"> <p>This section mainly exists as the “rock bottom” of note-taking, if I’m being honest. <a href="#fnref:rb" class="reversefootnote" role="doc-backlink">&#8617;</a></p> </li> <li id="fn:workaround" role="doc-endnote"> <p>You <em>can</em>, technically. You can insert a type of page, which I called the same name as the note I intended to link to, and on that page you can add a text body which contains a link to the note. If this was confusing to read, then imagine the UX behind figuring it out! <a href="#fnref:workaround" class="reversefootnote" role="doc-backlink">&#8617;</a></p> </li> <li id="fn:graph" role="doc-endnote"> <p>“<em>But what about <a href="https://help.obsidian.md/Plugins/Graph+view">the graph</a>?</em>” I hear seasoned Obsidian users cry out. I like the graph. It’s cool. I don’t find it useful for productivity (hence it’s absence here) but I do sometimes open it if I’m bored. <a href="#fnref:graph" class="reversefootnote" role="doc-backlink">&#8617;</a></p> </li> <li id="fn:topic" role="doc-endnote"> <p>It’s up to you what constitutes a small factoid and what needs to be a topic/idea. I usually think “<em>How likely am I to refer to specifically this in the future?</em>” <a href="#fnref:topic" class="reversefootnote" role="doc-backlink">&#8617;</a></p> </li> </ol> </div>]]></content><author><name></name></author><category term="uni"/><summary type="html"><![CDATA[A timeline of my relationship with the excellent Markdown editor Obsidian, and how my note-taking workflow has evolved over uni.]]></summary></entry><entry><title type="html">My First Blog Post</title><link href="https://cem-yilmaz.github.io/blog/2024/hello-world/" rel="alternate" type="text/html" title="My First Blog Post"/><published>2024-10-31T16:30:00+00:00</published><updated>2024-10-31T16:30:00+00:00</updated><id>https://cem-yilmaz.github.io/blog/2024/hello-world</id><content type="html" xml:base="https://cem-yilmaz.github.io/blog/2024/hello-world/"><![CDATA[<h1 id="ive-made-a-website-why">I’ve made a website. Why?</h1> <p>Everyone has to start somewhere.</p> <p>I see this website as a place to publish my ideas. I needed somewhere to archive long insights into my thought processes, advice I’d give my younger self (<em>especially the guy who started University almost 4 years ago</em>), and anything else in between.</p> <p>Additionally, it’s just nice to have a website on the internet that I’ve got enough control over to integrate into my tools/workflows. 8-year old me would be so excited if he saw this.</p> <h1 id="what-can-you-expect-to-see-on-this-website">What can you expect to see on this website?</h1> <h2 id="blog">Blog</h2> <p>See above.</p> <p>Any of my friends know I quite enjoy the art of rambling, and I’ve developed quite a skill for it over the years.</p> <p>I often write how I would talk, incorporating informal mannerisms and often prioritising telling an engaging story over a concise one. You have been warned!</p> <h2 id="projects">Projects</h2> <p>Any big portfolio piece I’m a meaningful part of. I have many of my own personal projects, but unfortunately they usually fall into the category of “data manipulation and analysis involving hyper-sensitive personal data”, and as such I don’t publish them in full.</p> <p>The best of my projects are located in my <a href="/cv/">CV</a>, but this leaves me with a place to talk about even the smallest projects I’m proud of.</p> <h2 id="anything-else">Anything else?</h2> <p>This is literally the first post on this site. <em>Everything I’ve said here is subject to change</em>, and I may decide to go back on all of this and instead post pottery for the next 10 years.</p>]]></content><author><name></name></author><category term="personal"/><summary type="html"><![CDATA[Discussing my plans for the website]]></summary></entry></feed>